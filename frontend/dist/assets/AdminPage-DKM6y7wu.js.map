{"version":3,"file":"AdminPage-DKM6y7wu.js","sources":["../../node_modules/@mui/icons-material/esm/Analytics.js","../../node_modules/@mui/icons-material/esm/Edit.js","../../node_modules/@mui/icons-material/esm/Security.js","../../src/modules/admin/pages/AdminPage.jsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2M9 17H7v-5h2zm4 0h-2v-3h2zm0-5h-2v-2h2zm4 5h-2V7h2z\"\n}), 'Analytics');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.996.996 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 1 3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5zm0 10.99h7c-.53 4.12-3.28 7.79-7 8.94V12H5V6.3l7-3.11z\"\n}), 'Security');","import React, { useState, useMemo } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Button,\r\n  Alert,\r\n  Chip,\r\n  IconButton,\r\n  Tooltip,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  LinearProgress,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Switch,\r\n  FormControlLabel,\r\n  Divider,\r\n  Stack,\r\n} from '@mui/material';\r\nimport {\r\n  Refresh,\r\n  Settings,\r\n  Person,\r\n  Email,\r\n  Security,\r\n  Analytics,\r\n  Storage,\r\n  Schedule,\r\n  CheckCircle,\r\n  Error,\r\n  Warning,\r\n  Info,\r\n  Edit,\r\n  Delete,\r\n  Add,\r\n} from '@mui/icons-material';\r\nimport { useAuthQueries } from '../../../shared/hooks/useAuthQueries';\r\nimport { useTaskQueries } from '../../../shared/hooks/useTaskQueries';\r\nimport { TaskPriority, TaskStatus, UserRoles } from '../../../shared/api/types';\r\n\r\nconst AdminPage = () => {\r\n  const [selectedTab, setSelectedTab] = useState(0);\r\n  const [showUserDialog, setShowUserDialog] = useState(false);\r\n  const [showSystemDialog, setShowSystemDialog] = useState(false);\r\n  const [editingUser, setEditingUser] = useState(null);\r\n  const [systemSettings, setSystemSettings] = useState({\r\n    maxTasksPerUser: 1000,\r\n    maxFileSize: 10,\r\n    emailNotifications: true,\r\n    voiceProcessing: true,\r\n    nlpProcessing: true,\r\n    maintenanceMode: false,\r\n  });\r\n\r\n  const { useGetMe } = useAuthQueries();\r\n  const { useGetTasks, useGetAnalytics, useGetReminderStats } = useTaskQueries();\r\n\r\n  const { data: currentUser } = useGetMe();\r\n  const { data: tasksData } = useGetTasks();\r\n  const { data: analyticsData } = useGetAnalytics();\r\n  const { data: reminderStats } = useGetReminderStats();\r\n\r\n  const tasks = tasksData?.data || [];\r\n\r\n  // Check if user is admin\r\n  const isAdmin = currentUser?.role === UserRoles.ADMIN;\r\n\r\n  if (!isAdmin) {\r\n    return (\r\n      <Box sx={{ p: 3 }}>\r\n        <Alert severity=\"error\">\r\n          Access denied. Admin privileges required.\r\n        </Alert>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Calculate system statistics\r\n  const systemStats = useMemo(() => {\r\n    const totalUsers = 1; // Mock data - would come from user API\r\n    const totalTasks = tasks.length;\r\n    const completedTasks = tasks.filter(t => t.status === TaskStatus.COMPLETED).length;\r\n    const pendingTasks = tasks.filter(t => t.status === TaskStatus.PENDING).length;\r\n    const overdueTasks = tasks.filter(t => \r\n      t.deadline && new Date(t.deadline) < new Date() && t.status === TaskStatus.PENDING\r\n    ).length;\r\n    const urgentTasks = tasks.filter(t => t.priority === TaskPriority.URGENT).length;\r\n\r\n    return {\r\n      totalUsers,\r\n      totalTasks,\r\n      completedTasks,\r\n      pendingTasks,\r\n      overdueTasks,\r\n      urgentTasks,\r\n      completionRate: totalTasks > 0 ? (completedTasks / totalTasks) * 100 : 0,\r\n    };\r\n  }, [tasks]);\r\n\r\n  // Mock user data - would come from user management API\r\n  const users = [\r\n    {\r\n      id: '1',\r\n      username: 'admin',\r\n      email: 'admin@example.com',\r\n      fullname: 'System Administrator',\r\n      role: UserRoles.ADMIN,\r\n      createdAt: '2024-01-01',\r\n      lastLogin: '2024-01-15',\r\n      taskCount: tasks.length,\r\n      status: 'active',\r\n    },\r\n    {\r\n      id: '2',\r\n      username: 'user1',\r\n      email: 'user1@example.com',\r\n      fullname: 'John Doe',\r\n      role: UserRoles.USER,\r\n      createdAt: '2024-01-10',\r\n      lastLogin: '2024-01-14',\r\n      taskCount: 15,\r\n      status: 'active',\r\n    },\r\n  ];\r\n\r\n  const handleEditUser = (user) => {\r\n    setEditingUser(user);\r\n    setShowUserDialog(true);\r\n  };\r\n\r\n  const handleSaveUser = () => {\r\n    // Mock save user logic\r\n    console.log('Saving user:', editingUser);\r\n    setShowUserDialog(false);\r\n    setEditingUser(null);\r\n  };\r\n\r\n  const handleSystemSettingsChange = (field, value) => {\r\n    setSystemSettings(prev => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  const handleSaveSystemSettings = () => {\r\n    // Mock save system settings logic\r\n    console.log('Saving system settings:', systemSettings);\r\n    setShowSystemDialog(false);\r\n  };\r\n\r\n  const tabs = [\r\n    { label: 'Overview', icon: <Analytics /> },\r\n    { label: 'Users', icon: <Person /> },\r\n    { label: 'Tasks', icon: <Schedule /> },\r\n    { label: 'System', icon: <Settings /> },\r\n    { label: 'Email', icon: <Email /> },\r\n    { label: 'Security', icon: <Security /> },\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\r\n        <Typography variant=\"h4\">Admin Panel</Typography>\r\n        <Button\r\n          variant=\"outlined\"\r\n          startIcon={<Refresh />}\r\n          onClick={() => window.location.reload()}\r\n        >\r\n          Refresh\r\n        </Button>\r\n      </Box>\r\n\r\n      {/* Tab Navigation */}\r\n      <Paper sx={{ mb: 3 }}>\r\n        <Box display=\"flex\" gap={1} p={1}>\r\n          {tabs.map((tab, index) => (\r\n            <Button\r\n              key={index}\r\n              variant={selectedTab === index ? 'contained' : 'text'}\r\n              startIcon={tab.icon}\r\n              onClick={() => setSelectedTab(index)}\r\n              sx={{ minWidth: 120 }}\r\n            >\r\n              {tab.label}\r\n            </Button>\r\n          ))}\r\n        </Box>\r\n      </Paper>\r\n\r\n      {/* Overview Tab */}\r\n      {selectedTab === 0 && (\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <Person color=\"primary\" sx={{ mr: 2, fontSize: 40 }} />\r\n                  <Box>\r\n                    <Typography variant=\"h4\">{systemStats.totalUsers}</Typography>\r\n                    <Typography color=\"text.secondary\">Total Users</Typography>\r\n                  </Box>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <Schedule color=\"primary\" sx={{ mr: 2, fontSize: 40 }} />\r\n                  <Box>\r\n                    <Typography variant=\"h4\">{systemStats.totalTasks}</Typography>\r\n                    <Typography color=\"text.secondary\">Total Tasks</Typography>\r\n                  </Box>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <CheckCircle color=\"success\" sx={{ mr: 2, fontSize: 40 }} />\r\n                  <Box>\r\n                    <Typography variant=\"h4\">{systemStats.completedTasks}</Typography>\r\n                    <Typography color=\"text.secondary\">Completed</Typography>\r\n                  </Box>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <Error color=\"error\" sx={{ mr: 2, fontSize: 40 }} />\r\n                  <Box>\r\n                    <Typography variant=\"h4\">{systemStats.overdueTasks}</Typography>\r\n                    <Typography color=\"text.secondary\">Overdue</Typography>\r\n                  </Box>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Task Completion Rate\r\n                </Typography>\r\n                <Box display=\"flex\" alignItems=\"center\" gap={2}>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    value={systemStats.completionRate}\r\n                    sx={{ flex: 1, height: 8, borderRadius: 4 }}\r\n                  />\r\n                  <Typography variant=\"h6\">\r\n                    {systemStats.completionRate.toFixed(1)}%\r\n                  </Typography>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  System Status\r\n                </Typography>\r\n                <Stack spacing={1}>\r\n                  <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <Typography>Database</Typography>\r\n                    <Chip label=\"Online\" color=\"success\" size=\"small\" />\r\n                  </Box>\r\n                  <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <Typography>Email Service</Typography>\r\n                    <Chip label=\"Online\" color=\"success\" size=\"small\" />\r\n                  </Box>\r\n                  <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <Typography>Voice Processing</Typography>\r\n                    <Chip label=\"Online\" color=\"success\" size=\"small\" />\r\n                  </Box>\r\n                  <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <Typography>NLP Service</Typography>\r\n                    <Chip label=\"Online\" color=\"success\" size=\"small\" />\r\n                  </Box>\r\n                </Stack>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n\r\n      {/* Users Tab */}\r\n      {selectedTab === 1 && (\r\n        <Card>\r\n          <CardContent>\r\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\r\n              <Typography variant=\"h6\">User Management</Typography>\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<Add />}\r\n                onClick={() => {\r\n                  setEditingUser(null);\r\n                  setShowUserDialog(true);\r\n                }}\r\n              >\r\n                Add User\r\n              </Button>\r\n            </Box>\r\n            \r\n            <TableContainer>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Username</TableCell>\r\n                    <TableCell>Email</TableCell>\r\n                    <TableCell>Full Name</TableCell>\r\n                    <TableCell>Role</TableCell>\r\n                    <TableCell>Tasks</TableCell>\r\n                    <TableCell>Last Login</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell>Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {users.map((user) => (\r\n                    <TableRow key={user.id}>\r\n                      <TableCell>{user.username}</TableCell>\r\n                      <TableCell>{user.email}</TableCell>\r\n                      <TableCell>{user.fullname}</TableCell>\r\n                      <TableCell>\r\n                        <Chip\r\n                          label={user.role}\r\n                          color={user.role === UserRoles.ADMIN ? 'error' : 'primary'}\r\n                          size=\"small\"\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>{user.taskCount}</TableCell>\r\n                      <TableCell>{user.lastLogin}</TableCell>\r\n                      <TableCell>\r\n                        <Chip\r\n                          label={user.status}\r\n                          color={user.status === 'active' ? 'success' : 'default'}\r\n                          size=\"small\"\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <IconButton\r\n                          size=\"small\"\r\n                          onClick={() => handleEditUser(user)}\r\n                        >\r\n                          <Edit />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          size=\"small\"\r\n                          color=\"error\"\r\n                          onClick={() => {\r\n                            if (window.confirm('Are you sure you want to delete this user?')) {\r\n                              console.log('Delete user:', user.id);\r\n                            }\r\n                          }}\r\n                        >\r\n                          <Delete />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Tasks Tab */}\r\n      {selectedTab === 2 && (\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Task Management\r\n            </Typography>\r\n            \r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                <Paper sx={{ p: 2, textAlign: 'center' }}>\r\n                  <Typography variant=\"h4\" color=\"primary\">\r\n                    {systemStats.totalTasks}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">Total Tasks</Typography>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                <Paper sx={{ p: 2, textAlign: 'center' }}>\r\n                  <Typography variant=\"h4\" color=\"success.main\">\r\n                    {systemStats.completedTasks}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">Completed</Typography>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                <Paper sx={{ p: 2, textAlign: 'center' }}>\r\n                  <Typography variant=\"h4\" color=\"warning.main\">\r\n                    {systemStats.pendingTasks}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">Pending</Typography>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                <Paper sx={{ p: 2, textAlign: 'center' }}>\r\n                  <Typography variant=\"h4\" color=\"error.main\">\r\n                    {systemStats.overdueTasks}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">Overdue</Typography>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* System Tab */}\r\n      {selectedTab === 3 && (\r\n        <Card>\r\n          <CardContent>\r\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\r\n              <Typography variant=\"h6\">System Settings</Typography>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => setShowSystemDialog(true)}\r\n              >\r\n                Edit Settings\r\n              </Button>\r\n            </Box>\r\n            \r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={6}>\r\n                <Paper sx={{ p: 2 }}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    Current Settings\r\n                  </Typography>\r\n                  <Stack spacing={1}>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography>Max Tasks Per User:</Typography>\r\n                      <Typography>{systemSettings.maxTasksPerUser}</Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography>Max File Size (MB):</Typography>\r\n                      <Typography>{systemSettings.maxFileSize}</Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography>Email Notifications:</Typography>\r\n                      <Chip\r\n                        label={systemSettings.emailNotifications ? 'Enabled' : 'Disabled'}\r\n                        color={systemSettings.emailNotifications ? 'success' : 'default'}\r\n                        size=\"small\"\r\n                      />\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography>Voice Processing:</Typography>\r\n                      <Chip\r\n                        label={systemSettings.voiceProcessing ? 'Enabled' : 'Disabled'}\r\n                        color={systemSettings.voiceProcessing ? 'success' : 'default'}\r\n                        size=\"small\"\r\n                      />\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography>NLP Processing:</Typography>\r\n                      <Chip\r\n                        label={systemSettings.nlpProcessing ? 'Enabled' : 'Disabled'}\r\n                        color={systemSettings.nlpProcessing ? 'success' : 'default'}\r\n                        size=\"small\"\r\n                      />\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography>Maintenance Mode:</Typography>\r\n                      <Chip\r\n                        label={systemSettings.maintenanceMode ? 'Enabled' : 'Disabled'}\r\n                        color={systemSettings.maintenanceMode ? 'error' : 'success'}\r\n                        size=\"small\"\r\n                      />\r\n                    </Box>\r\n                  </Stack>\r\n                </Paper>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12} md={6}>\r\n                <Paper sx={{ p: 2 }}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    System Information\r\n                  </Typography>\r\n                  <Stack spacing={1}>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography>Server Status:</Typography>\r\n                      <Chip label=\"Online\" color=\"success\" size=\"small\" />\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography>Database Status:</Typography>\r\n                      <Chip label=\"Connected\" color=\"success\" size=\"small\" />\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography>Uptime:</Typography>\r\n                      <Typography>99.9%</Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography>Version:</Typography>\r\n                      <Typography>1.0.0</Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography>Last Backup:</Typography>\r\n                      <Typography>2024-01-15</Typography>\r\n                    </Box>\r\n                  </Stack>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Email Tab */}\r\n      {selectedTab === 4 && (\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Email Configuration\r\n            </Typography>\r\n            \r\n            <Alert severity=\"info\" sx={{ mb: 2 }}>\r\n              Email service is currently configured for Gmail. Users can configure their own email settings in their profile.\r\n            </Alert>\r\n            \r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={6}>\r\n                <Paper sx={{ p: 2 }}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    Email Statistics\r\n                  </Typography>\r\n                  <Stack spacing={1}>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography>Emails Sent Today:</Typography>\r\n                      <Typography>0</Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography>Emails Sent This Week:</Typography>\r\n                      <Typography>0</Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography>Failed Deliveries:</Typography>\r\n                      <Typography>0</Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography>Service Status:</Typography>\r\n                      <Chip label=\"Active\" color=\"success\" size=\"small\" />\r\n                    </Box>\r\n                  </Stack>\r\n                </Paper>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12} md={6}>\r\n                <Paper sx={{ p: 2 }}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    Email Templates\r\n                  </Typography>\r\n                  <Stack spacing={1}>\r\n                    <Button variant=\"outlined\" fullWidth>\r\n                      Welcome Email Template\r\n                    </Button>\r\n                    <Button variant=\"outlined\" fullWidth>\r\n                      Reminder Email Template\r\n                    </Button>\r\n                    <Button variant=\"outlined\" fullWidth>\r\n                      Overdue Email Template\r\n                    </Button>\r\n                    <Button variant=\"outlined\" fullWidth>\r\n                      Password Reset Template\r\n                    </Button>\r\n                  </Stack>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Security Tab */}\r\n      {selectedTab === 5 && (\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Security Settings\r\n            </Typography>\r\n            \r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={6}>\r\n                <Paper sx={{ p: 2 }}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    Authentication\r\n                  </Typography>\r\n                  <Stack spacing={1}>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography>JWT Token Expiry:</Typography>\r\n                      <Typography>15 minutes</Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography>Refresh Token Expiry:</Typography>\r\n                      <Typography>7 days</Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography>Password Requirements:</Typography>\r\n                      <Typography>8+ characters</Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography>Session Timeout:</Typography>\r\n                      <Typography>24 hours</Typography>\r\n                    </Box>\r\n                  </Stack>\r\n                </Paper>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12} md={6}>\r\n                <Paper sx={{ p: 2 }}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    Security Logs\r\n                  </Typography>\r\n                  <Stack spacing={1}>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography>Failed Login Attempts:</Typography>\r\n                      <Typography>0</Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography>Suspicious Activity:</Typography>\r\n                      <Typography>0</Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography>Last Security Scan:</Typography>\r\n                      <Typography>2024-01-15</Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography>Security Status:</Typography>\r\n                      <Chip label=\"Secure\" color=\"success\" size=\"small\" />\r\n                    </Box>\r\n                  </Stack>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* User Dialog */}\r\n      <Dialog open={showUserDialog} onClose={() => setShowUserDialog(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>\r\n          {editingUser ? 'Edit User' : 'Add New User'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2} sx={{ mt: 1 }}>\r\n            <TextField\r\n              label=\"Username\"\r\n              value={editingUser?.username || ''}\r\n              onChange={(e) => setEditingUser(prev => ({ ...prev, username: e.target.value }))}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              value={editingUser?.email || ''}\r\n              onChange={(e) => setEditingUser(prev => ({ ...prev, email: e.target.value }))}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"Full Name\"\r\n              value={editingUser?.fullname || ''}\r\n              onChange={(e) => setEditingUser(prev => ({ ...prev, fullname: e.target.value }))}\r\n              fullWidth\r\n            />\r\n            <FormControl fullWidth>\r\n              <InputLabel>Role</InputLabel>\r\n              <Select\r\n                value={editingUser?.role || UserRoles.USER}\r\n                onChange={(e) => setEditingUser(prev => ({ ...prev, role: e.target.value }))}\r\n                label=\"Role\"\r\n              >\r\n                <MenuItem value={UserRoles.USER}>User</MenuItem>\r\n                <MenuItem value={UserRoles.ADMIN}>Admin</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            {!editingUser && (\r\n              <TextField\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n            )}\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setShowUserDialog(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSaveUser}>\r\n            {editingUser ? 'Update' : 'Create'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* System Settings Dialog */}\r\n      <Dialog open={showSystemDialog} onClose={() => setShowSystemDialog(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>\r\n          System Settings\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2} sx={{ mt: 1 }}>\r\n            <TextField\r\n              label=\"Max Tasks Per User\"\r\n              type=\"number\"\r\n              value={systemSettings.maxTasksPerUser}\r\n              onChange={(e) => handleSystemSettingsChange('maxTasksPerUser', parseInt(e.target.value))}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"Max File Size (MB)\"\r\n              type=\"number\"\r\n              value={systemSettings.maxFileSize}\r\n              onChange={(e) => handleSystemSettingsChange('maxFileSize', parseInt(e.target.value))}\r\n              fullWidth\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={systemSettings.emailNotifications}\r\n                  onChange={(e) => handleSystemSettingsChange('emailNotifications', e.target.checked)}\r\n                />\r\n              }\r\n              label=\"Email Notifications\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={systemSettings.voiceProcessing}\r\n                  onChange={(e) => handleSystemSettingsChange('voiceProcessing', e.target.checked)}\r\n                />\r\n              }\r\n              label=\"Voice Processing\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={systemSettings.nlpProcessing}\r\n                  onChange={(e) => handleSystemSettingsChange('nlpProcessing', e.target.checked)}\r\n                />\r\n              }\r\n              label=\"NLP Processing\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={systemSettings.maintenanceMode}\r\n                  onChange={(e) => handleSystemSettingsChange('maintenanceMode', e.target.checked)}\r\n                />\r\n              }\r\n              label=\"Maintenance Mode\"\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setShowSystemDialog(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSaveSystemSettings}>\r\n            Save Settings\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AdminPage;"],"names":["Analytics","createSvgIcon","_jsx","Edit","Security","AdminPage","selectedTab","setSelectedTab","useState","showUserDialog","setShowUserDialog","showSystemDialog","setShowSystemDialog","editingUser","setEditingUser","systemSettings","setSystemSettings","useGetMe","useAuthQueries","useGetTasks","useGetAnalytics","useGetReminderStats","useTaskQueries","currentUser","tasksData","analyticsData","reminderStats","tasks","UserRoles","jsx","Box","Alert","systemStats","useMemo","totalTasks","completedTasks","t","TaskStatus","pendingTasks","overdueTasks","urgentTasks","TaskPriority","users","handleEditUser","user","handleSaveUser","handleSystemSettingsChange","field","value","prev","handleSaveSystemSettings","tabs","Person","Schedule","Settings","Email","jsxs","Typography","Button","Refresh","Paper","tab","index","Grid","Card","CardContent","CheckCircle","Error","LinearProgress","Stack","Chip","Add","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","IconButton","Delete","Dialog","DialogTitle","DialogContent","TextField","e","FormControl","InputLabel","Select","MenuItem","DialogActions","FormControlLabel","Switch"],"mappings":"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","x_google_ignoreList":[0,1,2]}